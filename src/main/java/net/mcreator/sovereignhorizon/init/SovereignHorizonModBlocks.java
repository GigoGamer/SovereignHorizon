
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.sovereignhorizon.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.sovereignhorizon.block.ThuliteBlock;
import net.mcreator.sovereignhorizon.block.TestBlock;
import net.mcreator.sovereignhorizon.block.SparseDeepLichenCoveredSodaliteBlock;
import net.mcreator.sovereignhorizon.block.SodaliteWallBlock;
import net.mcreator.sovereignhorizon.block.SodaliteTilesBlock;
import net.mcreator.sovereignhorizon.block.SodaliteTileWallBlock;
import net.mcreator.sovereignhorizon.block.SodaliteTileStairsBlock;
import net.mcreator.sovereignhorizon.block.SodaliteTileSlabBlock;
import net.mcreator.sovereignhorizon.block.SodaliteStairsBlock;
import net.mcreator.sovereignhorizon.block.SodaliteSlabBlock;
import net.mcreator.sovereignhorizon.block.SodaliteRedstoneOreBlock;
import net.mcreator.sovereignhorizon.block.SodaliteQuartzOreBlock;
import net.mcreator.sovereignhorizon.block.SodalitePressurePlateBlock;
import net.mcreator.sovereignhorizon.block.SodaliteLapisLazuliOreBlock;
import net.mcreator.sovereignhorizon.block.SodaliteEmeraldOreBlock;
import net.mcreator.sovereignhorizon.block.SodaliteDiamondOreBlock;
import net.mcreator.sovereignhorizon.block.SodaliteButtonBlock;
import net.mcreator.sovereignhorizon.block.SodaliteBricksBlock;
import net.mcreator.sovereignhorizon.block.SodaliteBrickWallBlock;
import net.mcreator.sovereignhorizon.block.SodaliteBrickStairsBlock;
import net.mcreator.sovereignhorizon.block.SodaliteBrickSlabBlock;
import net.mcreator.sovereignhorizon.block.SodaliteBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleWallBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleTilesBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleTileWallBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleTileStairsBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleTileSlabBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleStairsBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleSlabBlock;
import net.mcreator.sovereignhorizon.block.RawMarblePillarBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleBricksBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleBrickWallBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleBrickStairsBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleBrickSlabBlock;
import net.mcreator.sovereignhorizon.block.RawMarbleBlock;
import net.mcreator.sovereignhorizon.block.PolishedSodaliteWallBlock;
import net.mcreator.sovereignhorizon.block.PolishedSodaliteStairsBlock;
import net.mcreator.sovereignhorizon.block.PolishedSodaliteSlabBlock;
import net.mcreator.sovereignhorizon.block.PolishedSodaliteBlock;
import net.mcreator.sovereignhorizon.block.PolishedRawMarbleWallBlock;
import net.mcreator.sovereignhorizon.block.PolishedRawMarbleStairsBlock;
import net.mcreator.sovereignhorizon.block.PolishedRawMarbleSlabBlock;
import net.mcreator.sovereignhorizon.block.PolishedRawMarbleBlock;
import net.mcreator.sovereignhorizon.block.PolishedMarbleWallBlock;
import net.mcreator.sovereignhorizon.block.PolishedMarbleStairsBlock;
import net.mcreator.sovereignhorizon.block.PolishedMarbleSlabBlock;
import net.mcreator.sovereignhorizon.block.PolishedMarbleBlock;
import net.mcreator.sovereignhorizon.block.MarbleWallBlock;
import net.mcreator.sovereignhorizon.block.MarbleTilesBlock;
import net.mcreator.sovereignhorizon.block.MarbleTileWallBlock;
import net.mcreator.sovereignhorizon.block.MarbleTileStairsBlock;
import net.mcreator.sovereignhorizon.block.MarbleTileSlabBlock;
import net.mcreator.sovereignhorizon.block.MarbleStairsBlock;
import net.mcreator.sovereignhorizon.block.MarbleSlabBlock;
import net.mcreator.sovereignhorizon.block.MarblePillarBlock;
import net.mcreator.sovereignhorizon.block.MarbleBricksBlock;
import net.mcreator.sovereignhorizon.block.MarbleBrickWallBlock;
import net.mcreator.sovereignhorizon.block.MarbleBrickStairsBlock;
import net.mcreator.sovereignhorizon.block.MarbleBrickSlabBlock;
import net.mcreator.sovereignhorizon.block.MarbleBlock;
import net.mcreator.sovereignhorizon.block.LiquidVoidBlock;
import net.mcreator.sovereignhorizon.block.LepidoliteBlock;
import net.mcreator.sovereignhorizon.block.LarimarBlock;
import net.mcreator.sovereignhorizon.block.InfusionTableBlock;
import net.mcreator.sovereignhorizon.block.DeepLichenCoveredSodaliteBlock;
import net.mcreator.sovereignhorizon.block.CrackedSodaliteTilesBlock;
import net.mcreator.sovereignhorizon.block.CrackedSodaliteBricksBlock;
import net.mcreator.sovereignhorizon.block.CrackedRawMarbleTilesBlock;
import net.mcreator.sovereignhorizon.block.CrackedRawMarbleBricksBlock;
import net.mcreator.sovereignhorizon.block.CrackedMarbleTilesBlock;
import net.mcreator.sovereignhorizon.block.CrackedMarbleBricksBlock;
import net.mcreator.sovereignhorizon.block.CobbledSodaliteWallBlock;
import net.mcreator.sovereignhorizon.block.CobbledSodaliteStairsBlock;
import net.mcreator.sovereignhorizon.block.CobbledSodaliteSlabBlock;
import net.mcreator.sovereignhorizon.block.CobbledSodaliteBlock;
import net.mcreator.sovereignhorizon.block.BlockofElixisShardsBlock;
import net.mcreator.sovereignhorizon.block.AshBlock;
import net.mcreator.sovereignhorizon.SovereignHorizonMod;

public class SovereignHorizonModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, SovereignHorizonMod.MODID);
	public static final RegistryObject<Block> TEST = REGISTRY.register("test", () -> new TestBlock());
	public static final RegistryObject<Block> SODALITE = REGISTRY.register("sodalite", () -> new SodaliteBlock());
	public static final RegistryObject<Block> SODALITE_STAIRS = REGISTRY.register("sodalite_stairs", () -> new SodaliteStairsBlock());
	public static final RegistryObject<Block> SODALITE_SLAB = REGISTRY.register("sodalite_slab", () -> new SodaliteSlabBlock());
	public static final RegistryObject<Block> SODALITE_WALL = REGISTRY.register("sodalite_wall", () -> new SodaliteWallBlock());
	public static final RegistryObject<Block> SODALITE_PRESSURE_PLATE = REGISTRY.register("sodalite_pressure_plate", () -> new SodalitePressurePlateBlock());
	public static final RegistryObject<Block> SODALITE_BUTTON = REGISTRY.register("sodalite_button", () -> new SodaliteButtonBlock());
	public static final RegistryObject<Block> SPARSE_DEEP_LICHEN_COVERED_SODALITE = REGISTRY.register("sparse_deep_lichen_covered_sodalite", () -> new SparseDeepLichenCoveredSodaliteBlock());
	public static final RegistryObject<Block> DEEP_LICHEN_COVERED_SODALITE = REGISTRY.register("deep_lichen_covered_sodalite", () -> new DeepLichenCoveredSodaliteBlock());
	public static final RegistryObject<Block> COBBLED_SODALITE = REGISTRY.register("cobbled_sodalite", () -> new CobbledSodaliteBlock());
	public static final RegistryObject<Block> COBBLED_SODALITE_STAIRS = REGISTRY.register("cobbled_sodalite_stairs", () -> new CobbledSodaliteStairsBlock());
	public static final RegistryObject<Block> COBBLED_SODALITE_SLAB = REGISTRY.register("cobbled_sodalite_slab", () -> new CobbledSodaliteSlabBlock());
	public static final RegistryObject<Block> COBBLED_SODALITE_WALL = REGISTRY.register("cobbled_sodalite_wall", () -> new CobbledSodaliteWallBlock());
	public static final RegistryObject<Block> POLISHED_SODALITE = REGISTRY.register("polished_sodalite", () -> new PolishedSodaliteBlock());
	public static final RegistryObject<Block> POLISHED_SODALITE_STAIRS = REGISTRY.register("polished_sodalite_stairs", () -> new PolishedSodaliteStairsBlock());
	public static final RegistryObject<Block> POLISHED_SODALITE_SLAB = REGISTRY.register("polished_sodalite_slab", () -> new PolishedSodaliteSlabBlock());
	public static final RegistryObject<Block> POLISHED_SODALITE_WALL = REGISTRY.register("polished_sodalite_wall", () -> new PolishedSodaliteWallBlock());
	public static final RegistryObject<Block> SODALITE_BRICKS = REGISTRY.register("sodalite_bricks", () -> new SodaliteBricksBlock());
	public static final RegistryObject<Block> SODALITE_BRICK_STAIRS = REGISTRY.register("sodalite_brick_stairs", () -> new SodaliteBrickStairsBlock());
	public static final RegistryObject<Block> SODALITE_BRICK_SLAB = REGISTRY.register("sodalite_brick_slab", () -> new SodaliteBrickSlabBlock());
	public static final RegistryObject<Block> SODALITE_BRICK_WALL = REGISTRY.register("sodalite_brick_wall", () -> new SodaliteBrickWallBlock());
	public static final RegistryObject<Block> CRACKED_SODALITE_BRICKS = REGISTRY.register("cracked_sodalite_bricks", () -> new CrackedSodaliteBricksBlock());
	public static final RegistryObject<Block> SODALITE_TILES = REGISTRY.register("sodalite_tiles", () -> new SodaliteTilesBlock());
	public static final RegistryObject<Block> SODALITE_TILE_STAIRS = REGISTRY.register("sodalite_tile_stairs", () -> new SodaliteTileStairsBlock());
	public static final RegistryObject<Block> SODALITE_TILE_SLAB = REGISTRY.register("sodalite_tile_slab", () -> new SodaliteTileSlabBlock());
	public static final RegistryObject<Block> SODALITE_TILE_WALL = REGISTRY.register("sodalite_tile_wall", () -> new SodaliteTileWallBlock());
	public static final RegistryObject<Block> CRACKED_SODALITE_TILES = REGISTRY.register("cracked_sodalite_tiles", () -> new CrackedSodaliteTilesBlock());
	public static final RegistryObject<Block> INFUSION_TABLE = REGISTRY.register("infusion_table", () -> new InfusionTableBlock());
	public static final RegistryObject<Block> LARIMAR = REGISTRY.register("larimar", () -> new LarimarBlock());
	public static final RegistryObject<Block> LEPIDOLITE = REGISTRY.register("lepidolite", () -> new LepidoliteBlock());
	public static final RegistryObject<Block> SODALITE_EMERALD_ORE = REGISTRY.register("sodalite_emerald_ore", () -> new SodaliteEmeraldOreBlock());
	public static final RegistryObject<Block> SODALITE_DIAMOND_ORE = REGISTRY.register("sodalite_diamond_ore", () -> new SodaliteDiamondOreBlock());
	public static final RegistryObject<Block> SODALITE_LAPIS_LAZULI_ORE = REGISTRY.register("sodalite_lapis_lazuli_ore", () -> new SodaliteLapisLazuliOreBlock());
	public static final RegistryObject<Block> SODALITE_REDSTONE_ORE = REGISTRY.register("sodalite_redstone_ore", () -> new SodaliteRedstoneOreBlock());
	public static final RegistryObject<Block> SODALITE_QUARTZ_ORE = REGISTRY.register("sodalite_quartz_ore", () -> new SodaliteQuartzOreBlock());
	public static final RegistryObject<Block> BLOCKOF_ELIXIS_SHARDS = REGISTRY.register("blockof_elixis_shards", () -> new BlockofElixisShardsBlock());
	public static final RegistryObject<Block> MARBLE_STAIRS = REGISTRY.register("marble_stairs", () -> new MarbleStairsBlock());
	public static final RegistryObject<Block> POLISHED_RAW_MARBLE_STAIRS = REGISTRY.register("polished_raw_marble_stairs", () -> new PolishedRawMarbleStairsBlock());
	public static final RegistryObject<Block> MARBLE_BRICK_SLAB = REGISTRY.register("marble_brick_slab", () -> new MarbleBrickSlabBlock());
	public static final RegistryObject<Block> RAW_MARBLE_BRICK_SLAB = REGISTRY.register("raw_marble_brick_slab", () -> new RawMarbleBrickSlabBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_WALL = REGISTRY.register("polished_marble_wall", () -> new PolishedMarbleWallBlock());
	public static final RegistryObject<Block> RAW_MARBLE_STAIRS = REGISTRY.register("raw_marble_stairs", () -> new RawMarbleStairsBlock());
	public static final RegistryObject<Block> RAW_MARBLE_BRICKS = REGISTRY.register("raw_marble_bricks", () -> new RawMarbleBricksBlock());
	public static final RegistryObject<Block> CRACKED_RAW_MARBLE_TILES = REGISTRY.register("cracked_raw_marble_tiles", () -> new CrackedRawMarbleTilesBlock());
	public static final RegistryObject<Block> RAW_MARBLE_SLAB = REGISTRY.register("raw_marble_slab", () -> new RawMarbleSlabBlock());
	public static final RegistryObject<Block> POLISHED_RAW_MARBLE_WALL = REGISTRY.register("polished_raw_marble_wall", () -> new PolishedRawMarbleWallBlock());
	public static final RegistryObject<Block> MARBLE_TILE_WALL = REGISTRY.register("marble_tile_wall", () -> new MarbleTileWallBlock());
	public static final RegistryObject<Block> CRACKED_RAW_MARBLE_BRICKS = REGISTRY.register("cracked_raw_marble_bricks", () -> new CrackedRawMarbleBricksBlock());
	public static final RegistryObject<Block> RAW_MARBLE = REGISTRY.register("raw_marble", () -> new RawMarbleBlock());
	public static final RegistryObject<Block> MARBLE_SLAB = REGISTRY.register("marble_slab", () -> new MarbleSlabBlock());
	public static final RegistryObject<Block> RAW_MARBLE_PILLAR = REGISTRY.register("raw_marble_pillar", () -> new RawMarblePillarBlock());
	public static final RegistryObject<Block> RAW_MARBLE_TILE_SLAB = REGISTRY.register("raw_marble_tile_slab", () -> new RawMarbleTileSlabBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE = REGISTRY.register("polished_marble", () -> new PolishedMarbleBlock());
	public static final RegistryObject<Block> RAW_MARBLE_BRICK_STAIRS = REGISTRY.register("raw_marble_brick_stairs", () -> new RawMarbleBrickStairsBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_STAIRS = REGISTRY.register("polished_marble_stairs", () -> new PolishedMarbleStairsBlock());
	public static final RegistryObject<Block> MARBLE_TILE_STAIRS = REGISTRY.register("marble_tile_stairs", () -> new MarbleTileStairsBlock());
	public static final RegistryObject<Block> CRACKED_MARBLE_TILES = REGISTRY.register("cracked_marble_tiles", () -> new CrackedMarbleTilesBlock());
	public static final RegistryObject<Block> MARBLE_PILLAR = REGISTRY.register("marble_pillar", () -> new MarblePillarBlock());
	public static final RegistryObject<Block> MARBLE = REGISTRY.register("marble", () -> new MarbleBlock());
	public static final RegistryObject<Block> MARBLE_WALL = REGISTRY.register("marble_wall", () -> new MarbleWallBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_SLAB = REGISTRY.register("polished_marble_slab", () -> new PolishedMarbleSlabBlock());
	public static final RegistryObject<Block> MARBLE_TILES = REGISTRY.register("marble_tiles", () -> new MarbleTilesBlock());
	public static final RegistryObject<Block> RAW_MARBLE_TILE_STAIRS = REGISTRY.register("raw_marble_tile_stairs", () -> new RawMarbleTileStairsBlock());
	public static final RegistryObject<Block> RAW_MARBLE_WALL = REGISTRY.register("raw_marble_wall", () -> new RawMarbleWallBlock());
	public static final RegistryObject<Block> RAW_MARBLE_BRICK_WALL = REGISTRY.register("raw_marble_brick_wall", () -> new RawMarbleBrickWallBlock());
	public static final RegistryObject<Block> MARBLE_TILE_SLAB = REGISTRY.register("marble_tile_slab", () -> new MarbleTileSlabBlock());
	public static final RegistryObject<Block> POLISHED_RAW_MARBLE_SLAB = REGISTRY.register("polished_raw_marble_slab", () -> new PolishedRawMarbleSlabBlock());
	public static final RegistryObject<Block> POLISHED_RAW_MARBLE = REGISTRY.register("polished_raw_marble", () -> new PolishedRawMarbleBlock());
	public static final RegistryObject<Block> MARBLE_BRICK_STAIRS = REGISTRY.register("marble_brick_stairs", () -> new MarbleBrickStairsBlock());
	public static final RegistryObject<Block> RAW_MARBLE_TILE_WALL = REGISTRY.register("raw_marble_tile_wall", () -> new RawMarbleTileWallBlock());
	public static final RegistryObject<Block> MARBLE_BRICK_WALL = REGISTRY.register("marble_brick_wall", () -> new MarbleBrickWallBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS = REGISTRY.register("marble_bricks", () -> new MarbleBricksBlock());
	public static final RegistryObject<Block> CRACKED_MARBLE_BRICKS = REGISTRY.register("cracked_marble_bricks", () -> new CrackedMarbleBricksBlock());
	public static final RegistryObject<Block> RAW_MARBLE_TILES = REGISTRY.register("raw_marble_tiles", () -> new RawMarbleTilesBlock());
	public static final RegistryObject<Block> ASH = REGISTRY.register("ash", () -> new AshBlock());
	public static final RegistryObject<Block> THULITE = REGISTRY.register("thulite", () -> new ThuliteBlock());
	public static final RegistryObject<Block> LIQUID_VOID = REGISTRY.register("liquid_void", () -> new LiquidVoidBlock());
	// Start of user code block custom blocks
	// End of user code block custom blocks
}
